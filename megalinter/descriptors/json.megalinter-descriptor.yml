descriptor_id: JSON
descriptor_type: format
descriptor_flavors:
  - all_flavors # Any project can contain JSON
  - ci_light
file_extensions:
  - ".json"
linters:
  # JSONLINT
  - linter_name: jsonlint
    linter_url: https://github.com/zaach/jsonlint
    linter_megalinter_ref_url: https://github.com/zaach/jsonlint/pull/127
    version_command_return_code: 1
    examples:
      - "jsonlint myfile.json"
    install:
      npm:
        - jsonlint
  # ESLINT-PLUGIN-JSONC
  - linter_name: eslint-plugin-jsonc
    linter_url: https://ota-meshi.github.io/eslint-plugin-jsonc/
    linter_repo: https://github.com/ota-meshi/eslint-plugin-jsonc
    linter_text: |
      eslint-plugin-jsonc requires to have a `.eslintrc.json` [custom configuration file applicable to your project](https://github.com/ota-meshi/eslint-plugin-jsonc#configuration)
      If you use this linter, you may disable `jsonlint` to avoid false positive errors, by adding the following content in your `.mega-linter.yml` configuration file

      ```yaml
      DISABLE_LINTERS:
        - JSON_JSONLINT
      ```
    linter_rules_url: https://ota-meshi.github.io/eslint-plugin-jsonc/rules/
    linter_banner_image_url: https://i.imgur.com/CFdruO8.jpg
    linter_rules_configuration_url: https://eslint.org/docs/user-guide/configuring
    linter_rules_inline_disable_url: https://eslint.org/docs/user-guide/configuring#disabling-rules-with-inline-comments
    active_only_if_file_found:
      - ".eslintrc.json"
      - ".eslintrc.yml"
      - ".eslintrc.yaml"
      - ".eslintrc.js"
    cli_lint_mode: list_of_files
    cli_executable: eslint
    config_file_name: .eslintrc.json
    cli_config_extra_args:
      - "--no-eslintrc"
    cli_lint_extra_args:
      - "--no-ignore"
    cli_lint_fix_arg_name: "--fix"
    cli_lint_errors_count: regex_sum
    cli_lint_errors_regex: "âœ– ([0-9]+) problem"
    examples:
      - "eslint myfile.json"
      - "eslint -c .eslintrc.json --no-eslintrc --no-ignore myfile.json"
      - "eslint --fix -c .eslintrc.json --no-eslintrc --no-ignore myfile.json"
    test_folder: jsonc
    install:
      npm:
        - eslint eslint-plugin-jsonc
    ide:
      vscode:
        - name: vscode-eslint
          url: https://github.com/ota-meshi/eslint-plugin-jsonc#visual-studio-code
    # V8R
  - linter_name: v8r
    linter_url: https://github.com/chris48s/v8r
    linter_text: v8r checks the validity of JSON/YAML files if they have a matching schema defined on [schemastore.org](https://www.schemastore.org/json/)
    linter_rules_url: https://www.schemastore.org/json/
    linter_megalinter_ref_url: "no"
    cli_lint_extra_args:
      - "--ignore-errors"
    cli_help_arg_name: "--help"
    test_folder: json_schema
    examples:
      - "v8r --ignore-errors myfile.json"
    install:
      npm:
        - v8r
    ide:
      eclipse:
        - name: native support
          url: https://www.eclipse.org/
      idea:
        - name: native support
          url: https://www.jetbrains.com/products/#type=ide
      vim:
        - name: vison
          url: https://github.com/Quramy/vison
      vscode:
        - name: native support
          url: https://code.visualstudio.com/