descriptor_id: SPELL
descriptor_type: other
descriptor_flavors:
  - all_flavors # Applicable to CI in any language project
  - cupcake
lint_all_other_linters_files: true
linters:
  # MISSPELL
  - linter_name: misspell
    name: SPELL_MISSPELL
    linter_text: misspell detects and corrects commonly misspelled english words
    linter_url: https://github.com/client9/misspell
    linter_repo: https://github.com/client9/misspell
    cli_lint_mode: list_of_files
    cli_lint_extra_args:
      - "-error"
    cli_lint_fix_arg_name: "-w"
    cli_lint_fix_remove_args:
      - "-error"
    cli_version_arg_name: "-v"
    version_extract_regex: "((\\d+(\\.\\d+)+)|(dev))"
    help_command_return_code: 2
    examples:
      - "misspell myfile.any"
    install:
      dockerfile:
        - |
          RUN ML_THIRD_PARTY_DIR="/third-party/misspell" \
              && mkdir -p ${ML_THIRD_PARTY_DIR} \
              && curl -L -o ${ML_THIRD_PARTY_DIR}/install-misspell.sh https://git.io/misspell \
              && sh .${ML_THIRD_PARTY_DIR}/install-misspell.sh \
              && find ${ML_THIRD_PARTY_DIR} -type f -not -name 'LICENSE*' -delete -o -type d -empty -delete \
              && find /tmp -path '/tmp/tmp.*' -type f -name 'misspell*' -delete -o -type d -empty -delete
  # CSPELL
  - class: CSpellLinter
    linter_name: cspell
    name: SPELL_CSPELL
    variables:
      - name: SPELL_CSPELL_ANALYZE_FILE_NAMES
        default_value: "true"
        description: If set to `true`, MegaLinter will also send file names to cspell for analysis. Disable by defining `SPELL_CSPELL_ANALYZE_FILE_NAMES` to `false`
    linter_text: |
      MegaLinter generates content of a `.cspell.json` config file at the end of its TextReporter artifact

      Copy it at the root of your repository, read it, remove real spelling errors (after have corrected them in the source), and you're good to go !

      If you do not want cspell to analyze the files names, define `SPELL_CSPELL_ANALYZE_FILE_NAMES` to `false`
    linter_url: https://github.com/streetsidesoftware/cspell/tree/master/packages/cspell
    linter_repo: https://github.com/streetsidesoftware/cspell
    linter_image_url: https://streetsidesoftware.gallerycdn.vsassets.io/extensions/streetsidesoftware/code-spell-checker/1.9.2/1601218033318/Microsoft.VisualStudio.Services.Icons.Default
    linter_rules_configuration_url: https://github.com/streetsidesoftware/cspell/tree/master/packages/cspell#customization
    linter_rules_inline_disable_url: https://github.com/streetsidesoftware/cspell/tree/master/packages/cspell#enable--disable-checking-sections-of-code
    linter_megalinter_ref_url: https://github.com/streetsidesoftware/cspell/tree/master/packages/cspell#mega-linter
    config_file_name: ".cspell.json"
    cli_lint_mode: list_of_files
    cli_lint_errors_count: regex_number
    cli_lint_errors_regex: "Issues found: ([0-9]+) in .* files"
    examples:
      - "cspell myfile.any"
      - "cspell -c cspell.json myfile.any"
    install:
      npm:
        - "cspell"
    ide:
      vscode:
        - name: Code Spell Checker
          url: https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker
  # PROSELINT
  - linter_name: proselint
    name: SPELL_PROSELINT
    lint_all_other_linters_files: false
    file_extensions:
      - ".md"
      - ".txt"
    active_only_if_file_found:
      - .proselintrc
      - proselint/config.json
    linter_text: a linter for prose
    linter_url: http://proselint.com
    linter_repo: https://github.com/amperser/proselint
    linter_banner_image_url: https://raw.githubusercontent.com/amperser/proselint/main/logo.png
    linter_rules_url: https://github.com/amperser/proselint#checks
    linter_rules_configuration_url: https://github.com/amperser/proselint#checks
    cli_config_arg_name: --config
    config_file_name: .proselintrc
    cli_lint_mode: list_of_files
    cli_lint_errors_count: regex_count
    cli_lint_errors_regex: ":([0-9]+):([0-9]+): (.*)"
    cli_version_arg_name: "-v"
    examples:
      - "proselint --config .proselintrc myfile.md myfile2.txt myfile3.rst"
    install:
      pip:
        - proselint
    ide:
      atom:
        - name: linter-proselint
          url: https://atom.io/packages/linter-proselint
      idea:
        - name: Proselint
          url: https://plugins.jetbrains.com/plugin/9854-proselint
      sublime:
        - name: SublimeLinter-contrib-proselint
          url: https://github.com/amperser/proselint/tree/main/plugins/sublime/SublimeLinter-contrib-proselint
      vscode:
        - name: VSCode Proselint
          url: https://marketplace.visualstudio.com/items?itemName=PatrykPeszko.vscode-proselint
