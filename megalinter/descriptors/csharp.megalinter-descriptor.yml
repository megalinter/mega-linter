descriptor_id: CSHARP
descriptor_label: "C#"
descriptor_type: language
descriptor_flavors:
  - dotnet
file_extensions:
  - ".cs"
install:
  apk:
    - icu-libs
    - libcurl
    - libintl
    - libssl1.1
    - libstdc++
    - lttng-ust-dev
    - zlib
    - zlib-dev
  dockerfile:
    - |
      RUN wget --tries=5 -q -O dotnet-install.sh https://dot.net/v1/dotnet-install.sh \
          && chmod +x dotnet-install.sh \
          && ./dotnet-install.sh --install-dir /usr/share/dotnet -channel 6.0 -version latest
    - ENV PATH="${PATH}:/root/.dotnet/tools:/usr/share/dotnet"
linters:
  # DOTNET FORMAT
  - class: DotnetFormatLinter
    linter_name: dotnet-format
    is_formatter: true
    linter_text: |
      dotnet-format requires a `.sln` or `.csproj` file to run correctly.
    linter_url: https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-format
    linter_repo: https://github.com/dotnet/format
    linter_image_url: https://user-images.githubusercontent.com/9797472/61659851-6bbdc880-ac7d-11e9-95f7-d30c7de1a18a.png
    pre_commands:
      - command: ls /tmp/lint/.automation/test/csharp
        cwd: "/"
      - command: echo "$(</tmp/lint/.automation/test/csharp/csharp_bad_01.cs)"
        cwd: "/"
      - command: dotnet format /tmp/lint/.automation/test/csharp --verify-no-changes -v d --include /tmp/lint/.automation/test/csharp/csharp_bad_01.cs
        cwd: "/"
    cli_lint_mode: list_of_files
    cli_executable: dotnet
    cli_lint_extra_args:
      - "format"
      - "{{WORKSPACE}}"
      - "--verify-no-changes"
      - "--verbosity"
      - "detailed"
      - "--include"
    cli_lint_fix_arg_name: "--megalinter-fix-flag" # Workaround for DotnetFormatLinter class behavior
    cli_lint_fix_remove_args:
      - "--verify-no-changes"
    linter_version_cache: "000"
    examples:
      - "dotnet format --verify-no-changes --exclude / --include myfile.cs myfile2.cs"
      - "dotnet format --exclude / --include myfile.cs myfile2.cs" # Fix
